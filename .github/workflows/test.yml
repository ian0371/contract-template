name: test

on:
  workflow_dispatch:
  pull_request:
    branches: [main]
    types: [opened, reopened, synchronize]

env:
  FOUNDRY_PROFILE: ci

jobs:
  check-linter:
    strategy:
      fail-fast: true

    name: Linter check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "npm"

      - uses: actions/cache@v3
        id: cache
        with:
          path: "**/node_modules"
          key: npm-v2-${{ hashFiles('**/package-lock.json') }}

          restore-keys: npm-v2-

      - run: npm ci
        if: steps.cache.outputs.cache-hit != 'true'

      - name: Run Hardhat tests
        run: npm run lint

  check-foundry:
    strategy:
      fail-fast: true

    name: Foundry check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Install hardhat library
        run: npm ci
        if: steps.cache.outputs.cache-hit != 'true'

      - name: Run Forge build
        run: |
          forge --version
          forge build --sizes
        id: build

      - name: Run Forge tests
        run: |
          forge test -vvv
        id: test

      - name: Run Forge coverage tests
        run: |
          forge coverage
        id: coverage

  check-hardhat:
    strategy:
      fail-fast: true

    name: Hardhat check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "npm"

      - uses: actions/cache@v3
        id: cache
        with:
          path: "**/node_modules"
          key: npm-v2-${{ hashFiles('**/package-lock.json') }}

          restore-keys: npm-v2-

      - run: npm ci
        if: steps.cache.outputs.cache-hit != 'true'

      - name: Run Hardhat tests
        run: npx hardhat test
        env:
          REPORT_GAS: 1
        id: test

      - name: Run Hardhat coverage tests
        run: echo "{output}={$(npx hardhat coverage)}\n" >> $GITHUB_OUTPUT
        id: coverage

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
